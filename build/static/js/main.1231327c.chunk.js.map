{"version":3,"sources":["components/Header.js","components/Navbar.js","components/MyApps.js","components/Input.js","utils.js","components/AddStory.js","components/TopBar.js","components/LoginPage.js","components/CreateApp.js","components/StoryPage.js","components/StoryDiv.js","components/MyStories.js","components/AppDetails.js","components/SignUpPage.js","components/AllStories.js","components/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","popUpVisibility","changeVisibility","className","onClick","fetch","then","document","location","Navbar","props","history","useHistory","user","to","navLinks","path","text","map","link","index","activeClassName","exact","key","push","id","name","MyApps","apps","updateApps","refresh","updateRefresh","isLoading","setLoading","useEffect","res","json","protected","appDivs","Input","placeholder","value","onChange","event","updateChange","target","type","sendPostRequest","url","body","method","JSON","stringify","headers","getPostOptions","AddStory","title","updateTitle","updateBody","cols","rows","storyId","TopBar","LoginPage","username","updateUsername","password","updatePassword","test","updateTestStatus","isError","updateLoginStatus","fields","Object","values","every","status","CreateApp","updateName","homePage","updateHomepage","callbackUrl","updateCallback","description","updateDescription","updateRegisterStatus","appId","StoryPage","responses","story","updateStory","useParams","message","updateMessage","updateRefreshState","responseDivs","response","ownerId","moment","receivedAt","format","state","style","marginTop","trim","fontWeight","StoryDiv","MyStories","stories","updateStories","AppDetails","appDetails","updateAppDetails","details","clientId","clientSecret","width","SignUpPage","email","updateEmail","company","updateCompany","usernameExists","updateSignStatus","AllStories","ProfilePage","updateUserData","App","updateUserDetails","loggedIn","userDetails","privatePages","component","routers","page","children","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1231327c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Header = function () {\n  const [popUpVisibility, changeVisibility] = useState(false);\n\n  const logout = () =>\n    fetch('/api/logout').then(() => {\n      document.location = '/';\n    });\n\n  return (\n    <div className='topBar'>\n      <span>Blog</span>\n      <div className={`${!popUpVisibility ? '' : 'hide'} homeOptions`}>\n        <button onClick={() => changeVisibility(true)}>Logout</button>\n      </div>\n      <div className={`${popUpVisibility ? '' : 'hide'} logoutPopup`}>\n        <p>Are you sure to logout ?</p>\n        <div className='logoutOptions'>\n          <button onClick={logout}>Yes</button>\n          <button onClick={() => changeVisibility(false)}>No</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { NavLink, useHistory, Redirect } from 'react-router-dom';\n\nconst Navbar = function (props) {\n  const links = [\n    { path: '/', text: 'All stories' },\n    { path: '/myStories', text: 'Your stories' },\n    { path: '/addStory', text: 'Add story' },\n    { path: '/myApps', text: 'Your apps' },\n    { path: '/createApp', text: 'Add app' }\n  ];\n\n  const history = useHistory();\n\n  if (props.user === null) return <Redirect to='/login' />;\n\n  const navLinks = links.map((link, index) => (\n    <NavLink\n      to={link.path}\n      activeClassName='activeLink'\n      exact\n      key={`navLink_${index}`}\n    >\n      {link.text}\n    </NavLink>\n  ));\n\n  const toProfile = () => history.push(`/user/${props.user.id}`);\n\n  return (\n    <div className='navbar'>\n      <p onClick={toProfile}>Hello {props.user.name}</p>\n      {navLinks}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, Redirect } from 'react-router-dom';\n\nconst MyApps = function (props) {\n  const [apps, updateApps] = useState([]);\n  const [refresh, updateRefresh] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch('/api/getMyApps')\n      .then(res => res.json())\n      .then(res => {\n        if (res.protected) {\n          return history.push('/');\n        }\n        updateApps(res.apps);\n        updateRefresh(true);\n        setLoading(false);\n      });\n  }, [refresh, history]);\n\n  if (props.user === null) return <Redirect to='/login' />;\n\n  if (isLoading) return <p>Application details are loading</p>;\n\n  const appDivs = apps.map(({ id, name }, index) => {\n    return (\n      <div key={`apps_${index}`} className='appDiv'>\n        <Link to={`/app/${id}`}>{name}</Link>\n      </div>\n    );\n  });\n\n  return <div className='dashboard-container'>{appDivs}</div>;\n};\n\nexport default MyApps;\n","import React from 'react';\n\nconst Input = function (props) {\n  const handleChange = function (event) {\n    props.updateChange(event.target.value);\n  };\n\n  return (\n    <input\n      placeholder={props.placeholder}\n      value={props.value}\n      onChange={handleChange}\n      type={props.type}\n    ></input>\n  );\n};\n\nexport default Input;\n","const getPostOptions = function (body) {\n  return {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n};\n\nconst sendPostRequest = function (url, body) {\n  return fetch(url, getPostOptions(body)).then(res => res.json());\n};\n\nexport default sendPostRequest;\n","import React, { useState } from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport Input from './Input';\nimport sendPostRequest from '../utils';\n\nconst AddStory = function (props) {\n  const [title, updateTitle] = useState('');\n  const [body, updateBody] = useState('');\n  const history = useHistory();\n  const submitStory = function () {\n    sendPostRequest('/api/addStory', { title, body }).then(res => {\n      history.push(`/story/${res.storyId}`);\n    });\n  };\n\n  if (props.user === null) {\n    return <Redirect to='/login' />;\n  }\n\n  return (\n    <div className='dashboard-container'>\n      <div className='addStory'>\n        <h3>Add new story</h3>\n        <Input\n          placeholder='Enter Title'\n          value={title}\n          updateChange={updateTitle}\n          type='text'\n        />\n        <textarea\n          placeholder='Enter content'\n          cols='100'\n          rows='15'\n          value={body}\n          onChange={event => updateBody(event.target.value)}\n        ></textarea>\n        <button onClick={submitStory}>Add Story</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddStory;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TopBar = function () {\n  return (\n    <div className='topBar'>\n      <span>Blog</span>\n      <div className='homeOptions'>\n        <Link to='/'>Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport Input from './Input';\nimport TopBar from './TopBar';\n\nimport sendPostRequest from '../utils';\n\nconst LoginPage = function (props) {\n  const [username, updateUsername] = useState('');\n  const [password, updatePassword] = useState('');\n  const [test, updateTestStatus] = useState(true);\n  const [isError, updateLoginStatus] = useState(false);\n\n  const handleClick = function () {\n    const fields = { username, password };\n    if (!Object.values(fields).every(value => value)) {\n      return updateTestStatus(false);\n    }\n    sendPostRequest('/api/loginToApp', fields).then(res => {\n      if (res.status) {\n        return (document.location = '/');\n      }\n      updateLoginStatus(true);\n    });\n  };\n\n  if (props.user !== null) {\n    return <Redirect to='/' />;\n  }\n\n  if (isError) {\n    return (\n      <div>\n        <TopBar />\n        <h3>Login failed</h3>\n        <Link to='/login'>Try again</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <TopBar />\n      <div className='loginWindow'>\n        <h3>Login To your account</h3>\n        <p className={test ? 'invisible' : ''}>Fields shouldn't be empty</p>\n        <label>\n          Username <span>*</span>\n        </label>\n        <Input\n          placeholder='eg: John'\n          type='text'\n          value={username}\n          updateChange={updateUsername}\n        />\n        <label>\n          Password <span>*</span>\n        </label>\n        <Input\n          placeholder='eg: John@123'\n          type='password'\n          value={password}\n          updateChange={updatePassword}\n        />\n        <button onClick={handleClick}>Login</button>\n        <span className='signupQuestion'>\n          Do not have an account ?<Link to='/signup'>Signup</Link>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { useHistory, Link, Redirect } from 'react-router-dom';\nimport Input from './Input';\nimport sendPostRequest from '../utils';\n\nconst CreateApp = function (props) {\n  const [name, updateName] = useState('');\n  const [homePage, updateHomepage] = useState('');\n  const [callbackUrl, updateCallback] = useState('');\n  const [description, updateDescription] = useState('');\n  const [test, updateTestStatus] = useState(true);\n  const [isError, updateRegisterStatus] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = function () {\n    const fields = { name, homePage, description, callbackUrl };\n    if (!Object.values(fields).every(value => value)) {\n      return updateTestStatus(false);\n    }\n    sendPostRequest('/api/createApp', fields).then(res => {\n      if (res.appId) {\n        return history.push(`/app/${res.appId}`);\n      }\n      updateRegisterStatus(true);\n    });\n  };\n\n  if (props.user === null) {\n    return <Redirect to='/login' />;\n  }\n\n  if (isError)\n    return (\n      <div className='dashboard-container'>\n        <div className='createAppDiv'>\n          <h3>Couldn't Register app</h3>\n          <Link to='/createApp'>Try again</Link>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className='dashboard-container'>\n      <div className='createAppDiv'>\n        <h3>Create you auth app</h3>\n        <p className={test ? 'invisible' : ''}>Fields shouldn't be empty</p>\n        <label>\n          Application name <span>*</span>\n        </label>\n        <Input\n          value={name}\n          placeholder='eg: authApp'\n          type='text'\n          updateChange={updateName}\n        />\n        <label>\n          Homepage url <span>*</span>\n        </label>\n        <Input\n          value={homePage}\n          placeholder='eg: http://example.com'\n          type='text'\n          updateChange={updateHomepage}\n        />\n        <label>\n          Application Description <span>*</span>\n        </label>\n        <Input\n          value={description}\n          placeholder='eg: This is a nice app'\n          type='text'\n          updateChange={updateDescription}\n        />\n        <label>\n          Callback url <span>*</span>\n        </label>\n        <Input\n          value={callbackUrl}\n          placeholder='eg: /sample/path/'\n          type='text'\n          updateChange={updateCallback}\n        />\n        <button onClick={handleClick}>Register</button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateApp;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory, Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport sendPostRequest from '../utils';\n\nimport Input from './Input';\n\nconst StoryPage = function (props) {\n  const [story, updateStory] = useState({ responses: [] });\n  const { id } = useParams();\n\n  const [message, updateMessage] = useState('');\n  const [refresh, updateRefreshState] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    sendPostRequest('/api/getStory', { id: +id }).then(res => {\n      updateStory(res);\n    });\n  }, [refresh, id]);\n\n  if (props.user === null) {\n    return <Redirect to='/login' />;\n  }\n\n  const postResponse = function () {\n    if (message.trim() === '') return;\n    const options = { storyId: +id, message };\n    sendPostRequest('/api/addResponse', options).then(() => {\n      updateRefreshState(state => !state);\n      updateMessage('');\n    });\n  };\n\n  const responseDivs = story.responses.map(response => {\n    const toProfile = () => history.push(`/user/${response.ownerId}`);\n\n    const deleteResponse = () =>\n      sendPostRequest('/api/deleteResponse', { id: response.id }).then(() => {\n        updateRefreshState(state => !state);\n      });\n    return (\n      <div className='response' key={`response_${response.id}`}>\n        <p>{response.message}</p>\n        <p>\n          Responded by,{' '}\n          <span className='creator' onClick={toProfile}>\n            {response.username}\n          </span>\n        </p>\n        <p className='date'>\n          {moment(response.receivedAt).format('MMM Do YYYY, h:m:ss A')}\n        </p>\n        <button onClick={deleteResponse}>Delete</button>\n      </div>\n    );\n  });\n\n  const deleteStory = () =>\n    sendPostRequest('/api/deleteStory', { id: story.id }).then(() => {\n      history.push('/');\n    });\n\n  return (\n    <div className='dashboard-container'>\n      <div className='storyPage'>\n        <div>\n          <h2>{story.title}</h2>\n          <p>Creator: {story.name}</p>\n          <p className='date'>\n            {moment(story.receivedAt).format('MMM Do YYYY, h:m:ss A')}\n          </p>\n          <button onClick={deleteStory}>Delete story</button>\n        </div>\n        <div className='body'>\n          <p>{story.body}</p>\n        </div>\n        <Input\n          value={message}\n          placeholder='You can response to this story'\n          updateChange={updateMessage}\n          type='text'\n        />\n        <button style={{ marginTop: '1%' }} onClick={postResponse}>\n          Respond\n        </button>\n        <p style={{ fontWeight: 600 }}>All responses</p>\n        <div>{responseDivs}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default StoryPage;\n","import React from 'react';\nimport moment from 'moment';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst StoryDiv = function (props) {\n  const history = useHistory();\n  const toProfile = () => history.push(`/user/${props.story.ownerId}`);\n\n  return (\n    <div className='story'>\n      <Link to={`/story/${props.story.id}`} style={{ fontWeight: 600 }}>\n        {props.story.title}\n      </Link>\n      <p>\n        Creator :{' '}\n        <span className='creator' onClick={toProfile}>\n          {props.story.name}\n        </span>\n      </p>\n      <p>{moment(props.story.receivedAt).format('MMM Do YYYY, h:m:ss A')}</p>\n    </div>\n  );\n};\n\nexport default StoryDiv;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport StoryDiv from './StoryDiv';\n\nconst MyStories = function (props) {\n  const [stories, updateStories] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/api/myStories')\n      .then(res => res.json())\n      .then(res => {\n        updateStories(res);\n        setLoading(false);\n      });\n  }, []);\n\n  if (props.user === null) return <Redirect to='/login' />;\n  if (isLoading) return <p>Story is is loading...</p>;\n\n  return (\n    <div className='dashboard-container'>\n      {stories.map(story => (\n        <StoryDiv story={story} key={`story_${story.id}`} />\n      ))}\n    </div>\n  );\n};\n\nexport default MyStories;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory, Redirect } from 'react-router-dom';\nimport sendPostRequest from '../utils';\n\nconst AppDetails = function (props) {\n  const { id } = useParams();\n  const history = useHistory();\n  const [appDetails, updateAppDetails] = useState(null);\n\n  useEffect(() => {\n    sendPostRequest('/api/getAppDetails', { id: +id }).then(res => {\n      if (res.protected) {\n        return history.push('/');\n      }\n      updateAppDetails(res.details);\n    });\n  }, [id, history]);\n\n  if (props.user === null) {\n    return <Redirect to='/login' />;\n  }\n\n  if (appDetails === null) return <div className='dashboard-container'></div>;\n\n  return (\n    <div className='dashboard-container'>\n      <div className='appDetails'>\n        <h3>\n          App name: <span>{appDetails.name}</span>\n        </h3>\n        <h3>\n          Client Id: <span>{appDetails.clientId}</span>\n        </h3>\n        <h3>\n          Client Secret: <span>{appDetails.clientSecret}</span>\n        </h3>\n        <h3>\n          Description: <span>{appDetails.description}</span>\n        </h3>\n        <h3>\n          Homepage: <span>{appDetails.homePage}</span>\n        </h3>\n        <h3>\n          Callback url: <span>{appDetails.callbackUrl}</span>\n        </h3>\n        <h3>\n          Created at: <span>Few minutes ago</span>\n        </h3>\n        <button style={{ width: '20%' }}>Transfer Ownership</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AppDetails;\n","import React, { useState } from 'react';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport Input from './Input';\nimport TopBar from './TopBar';\n\nimport sendPostRequest from '../utils';\n\nconst SignUpPage = function (props) {\n  const [name, updateName] = useState('');\n  const [username, updateUsername] = useState('');\n  const [email, updateEmail] = useState('');\n  const [company, updateCompany] = useState('');\n  const [password, updatePassword] = useState('');\n  const [test, updateTestStatus] = useState(true);\n  const [usernameExists, updateSignStatus] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = function () {\n    const fields = { name, username, password, email, company };\n    if (!Object.values(fields).every(value => value !== '')) {\n      return updateTestStatus(false);\n    }\n    sendPostRequest('/api/signinToApp', fields).then(res => {\n      if (res.status) {\n        return history.push('/');\n      }\n      updateSignStatus(true);\n    });\n  };\n\n  if (props.user !== null) {\n    return <Redirect to='/' />;\n  }\n\n  if (usernameExists) {\n    return (\n      <div>\n        <TopBar />\n        <h3>Username already exists</h3>\n        <Link to='/signup'>Try again</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <TopBar />\n      <div className='loginWindow'>\n        <h3>Create your account</h3>\n        <p className={test ? 'invisible' : ''}>Fields shouldn't be empty</p>\n        <label>\n          Name <span>*</span>\n        </label>\n        <Input\n          placeholder='eg: John'\n          type='text'\n          value={name}\n          updateChange={updateName}\n        />\n        <label>\n          Username <span>*</span>\n        </label>\n        <Input\n          placeholder='eg: John'\n          value={username}\n          type='text'\n          updateChange={updateUsername}\n        />\n        <label>\n          Email <span>*</span>\n        </label>\n        <Input\n          placeholder='eg: John@example.com'\n          value={email}\n          type='text'\n          updateChange={updateEmail}\n        />\n        <label>\n          Company <span>*</span>\n        </label>\n        <Input\n          value={company}\n          type='text'\n          placeholder='eg: Example Pvt Ltd.'\n          updateChange={updateCompany}\n        />\n        <label>\n          Password <span>*</span>\n        </label>\n        <Input\n          placeholder='eg: John@123'\n          value={password}\n          type='password'\n          updateChange={updatePassword}\n        />\n        <button onClick={handleClick}>Signup</button>\n        <span className='signupQuestion'>\n          Have an account ?<Link to='/login'>Login</Link>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport StoryDiv from './StoryDiv';\n\nconst AllStories = function (props) {\n  const [stories, updateStories] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/api/allStories')\n      .then(res => res.json())\n      .then(stories => {\n        updateStories(stories);\n        setLoading(false);\n      });\n    return () => setLoading(true);\n  }, []);\n\n  if (props.user === null) {\n    return <Redirect to='/login' />;\n  }\n\n  if (isLoading)\n    return <div className='dashboard-container'>Stories are loading...</div>;\n\n  return (\n    <div className='dashboard-container'>\n      {stories.map(story => (\n        <StoryDiv story={story} key={`story_${story.id}`} />\n      ))}\n    </div>\n  );\n};\n\nexport default AllStories;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport sendPostRequest from '../utils';\n\nconst ProfilePage = function (props) {\n  const [user, updateUserData] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    sendPostRequest('/api/userDetails', { id: +id }).then(updateUserData);\n  }, [id]);\n\n  if (props.user === null) {\n    return <Redirect to='/login' />;\n  }\n\n  if (!user) return <div>Content loading...</div>;\n\n  const { name, username, email, company } = user;\n\n  return (\n    <div className='dashboard-container'>\n      <div className='profileBox'>\n        <p>\n          Name: <span>{name}</span>\n        </p>\n        <p>\n          Username: <span>{username}</span>\n        </p>\n        <p>\n          Email: <span>{email}</span>\n        </p>\n        <p>\n          Company: <span>{company}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\n\nimport './App.css';\nimport './auth.css';\n\nimport Header from './components/Header';\nimport NavBar from './components/Navbar';\nimport MyApps from './components/MyApps';\nimport AddStory from './components/AddStory';\nimport LoginPage from './components/LoginPage';\nimport CreateApp from './components/CreateApp';\nimport StoryPage from './components/StoryPage';\nimport MyStories from './components/MyStories';\nimport AppDetails from './components/AppDetails';\nimport SignUpPage from './components/SignUpPage';\nimport AllStories from './components/AllStories';\nimport ProfilePage from './components/ProfilePage';\n\nconst App = function () {\n  const [user, updateUserDetails] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/isLoggedIn')\n      .then(res => res.json())\n      .then(res => {\n        if (res.loggedIn) updateUserDetails(res.userDetails);\n        else updateUserDetails(null);\n        return setLoading(false);\n      });\n  }, []);\n\n  const privatePages = [\n    { path: '/myApps', component: MyApps, exact: true },\n    { path: '/addStory', component: AddStory, exact: true },\n    { path: '/app/:id', component: AppDetails, exact: true },\n    { path: '/createApp', component: CreateApp, exact: true },\n    { path: '/myStories', component: MyStories, exact: true },\n    { path: '/story/:id', component: StoryPage, exact: true },\n    { path: '/user/:id', component: ProfilePage, exact: true },\n    { path: '/', component: AllStories, exact: true }\n  ];\n\n  if (isLoading) return <p>Site is is loading...</p>;\n\n  const routers = privatePages.map((page, index) => (\n    <Route\n      exact={page.exact}\n      path={page.path}\n      key={`dashboard_router${index}`}\n      children={<page.component user={user} />}\n    />\n  ));\n\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/login' children={<LoginPage user={user} />} />\n          <Route exact path='/signup' children={<SignUpPage user={user} />} />\n          <div>\n            <Header />\n            <div className='dashboard'>\n              <NavBar user={user} />\n              {routers}\n              {/* <Redirect to='/' /> */}\n            </div>\n          </div>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}